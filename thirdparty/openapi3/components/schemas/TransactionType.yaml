title: TransactionType
type: object
description: Data model for the complex type TransactionType.
properties:
  scenario:
    title: TransactionScenario
    type: string
    enum:
      - DEPOSIT
      - WITHDRAWAL
      - TRANSFER
      - PAYMENT
      - REFUND
    description: >
      Below are the allowed values for the enumeration.

      - DEPOSIT - Used for performing a Cash-In (deposit) transaction.

      In a normal scenario, electronic funds are transferred from a

      Business account to a Consumer account, and physical cash is given

      from the Consumer to the Business User.

      - WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction.

      In a normal scenario, electronic funds are transferred from a Consumerâ€™s

      account to a Business account, and physical cash is given from the
      Business

      User to the Consumer.

      - TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to
      Consumer)

      transaction.

      - PAYMENT - Usually used for performing a transaction from a Consumer to a

      Merchant or Organization, but could also be for a B2B (Business to
      Business)

      payment. The transaction could be online for a purchase in an Internet
      store,

      in a physical store where both the Consumer and Business User are present,
      a

      bill payment, a donation, and so on.

      - REFUND - Used for performing a refund of transaction.
    example: DEPOSIT
  subScenario:
    title: TransactionSubScenario
    type: string
    pattern: '^[A-Z_]{1,32}$'
    description: >-
      Possible sub-scenario, defined locally within the scheme (UndefinedEnum
      Type).
    example: LOCALLY_DEFINED_SUBSCENARIO
  initiator:
    title: TransactionInitiator
    type: string
    enum:
      - PAYER
      - PAYEE
    description: >
      Below are the allowed values for the enumeration.

      - PAYER - Sender of funds is initiating the transaction.

      The account to send from is either owned by the Payer or is connected to
      the

      Payer in some way.

      - PAYEE - Recipient of the funds is initiating the transaction by sending
      a

      transaction request. The Payer must approve the transaction, either

      automatically by a pre-generated OTP or by pre-approval of the Payee,

      or by manually approving in his or her own Device.
    example: PAYEE
  initiatorType:
    title: TransactionInitiatorType
    type: string
    enum:
      - CONSUMER
      - AGENT
      - BUSINESS
      - DEVICE
    description: |
      Below are the allowed values for the enumeration.
      - CONSUMER - Consumer is the initiator of the transaction.
      - AGENT - Agent is the initiator of the transaction.
      - BUSINESS - Business is the initiator of the transaction.
      - DEVICE - Device is the initiator of the transaction.
    example: CONSUMER
  refundInfo:
    title: Refund
    type: object
    description: Data model for the complex type Refund.
    properties:
      originalTransactionId:
        $ref: ./CorrelationId.yaml
      refundReason:
        title: RefundReason
        type: string
        minLength: 1
        maxLength: 128
        description: Reason for the refund.
        example: Free text indicating reason for the refund.
    required:
      - originalTransactionId
  balanceOfPayments:
    title: BalanceOfPayments
    type: string
    pattern: '^[1-9]\d{2}$'
    description: >
      (BopCode) The API data type
      [BopCode](https://www.imf.org/external/np/sta/bopcode/)

      is a JSON String of 3 characters, consisting of digits only.

      Negative numbers are not allowed. A leading zero is not allowed.
    example: 123
required:
  - scenario
  - initiator
  - initiatorType
